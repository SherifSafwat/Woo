// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Woo.Data;

namespace Woo.Migrations
{
    [DbContext(typeof(WooContext))]
    [Migration("20200625150658_6-25-2")]
    partial class _6252
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Woo.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("GenUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrantBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("ParamId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("WareHouseId")
                        .HasColumnType("int");

                    b.Property<string>("p_password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("p_username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ParamId");

                    b.HasIndex("SellerId");

                    b.HasIndex("WareHouseId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Woo.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerNum")
                        .HasColumnType("int");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceID")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Woo.Models.Device", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviceNum")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("GrantBy")
                        .HasColumnType("int");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Info1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("Woo.Models.InvoiceH", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("TotalDisc")
                        .HasColumnType("int");

                    b.Property<int>("TotalTax")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SellerId");

                    b.ToTable("InvoiceH");
                });

            modelBuilder.Entity("Woo.Models.InvoiceT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemNum")
                        .HasColumnType("int");

                    b.Property<int>("LineDisc")
                        .HasColumnType("int");

                    b.Property<int>("LineNum")
                        .HasColumnType("int");

                    b.Property<int>("LineTax")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalLine")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SellerId");

                    b.ToTable("InvoiceT");
                });

            modelBuilder.Entity("Woo.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("GlobalBarCode")
                        .HasColumnType("int");

                    b.Property<string>("GrantBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Info1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemNum")
                        .HasColumnType("int");

                    b.Property<int>("LocalBarCode")
                        .HasColumnType("int");

                    b.Property<int>("SourceID")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaxId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Woo.Models.Param", b =>
                {
                    b.Property<int>("ParamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Param1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParamId");

                    b.ToTable("Param");
                });

            modelBuilder.Entity("Woo.Models.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrantBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemPrice")
                        .HasColumnType("int");

                    b.Property<int>("PriceNum")
                        .HasColumnType("int");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PriceId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SellerId");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("Woo.Models.Receive", b =>
                {
                    b.Property<int>("ReceiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EnteringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrantBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Info1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("ReceiptNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserObjId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("ReceiveId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SellerId");

                    b.HasIndex("UserObjId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Receive");
                });

            modelBuilder.Entity("Woo.Models.ReportHead", b =>
                {
                    b.Property<int>("ReportHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrantBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Header0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderParam9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Param9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportADesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportAName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportEDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportEName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportSQL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportHeadId");

                    b.ToTable("ReportHead");
                });

            modelBuilder.Entity("Woo.Models.ReportTail", b =>
                {
                    b.Property<int>("ReportTailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("GrantBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Header0")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportHeadId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReportTailId");

                    b.HasIndex("ReportHeadId");

                    b.ToTable("ReportTail");
                });

            modelBuilder.Entity("Woo.Models.Resp", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RespNum")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Resp");
                });

            modelBuilder.Entity("Woo.Models.Seller", b =>
                {
                    b.Property<int>("SellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("GrantBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SellerNum")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SellerId");

                    b.ToTable("Seller");
                });

            modelBuilder.Entity("Woo.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("EName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("GrantBy")
                        .HasColumnType("int");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserNum")
                        .HasColumnType("int");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tt1")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Woo.Models.UserResp", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<int>("GrantBy")
                        .HasColumnType("int");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RespId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedID")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserRespNum")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("UserResp");
                });

            modelBuilder.Entity("Woo.Models.Warehouse", b =>
                {
                    b.Property<int>("WareHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DataComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("GrantBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrantComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GrantFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GrantToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Info1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("SysComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseNum")
                        .HasColumnType("int");

                    b.HasKey("WareHouseId");

                    b.HasIndex("SellerId");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Woo.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Woo.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Woo.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Woo.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Woo.Models.ApplicationUser", b =>
                {
                    b.HasOne("Woo.Models.Param", "ParamObj")
                        .WithMany()
                        .HasForeignKey("ParamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Woo.Models.Seller", "SellerObj")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Woo.Models.Warehouse", "WareHouseObj")
                        .WithMany()
                        .HasForeignKey("WareHouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Woo.Models.InvoiceH", b =>
                {
                    b.HasOne("Woo.Models.Seller", "SellerObj")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Woo.Models.InvoiceT", b =>
                {
                    b.HasOne("Woo.Models.Seller", "SellerObj")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Woo.Models.Price", b =>
                {
                    b.HasOne("Woo.Models.Item", "ItemObj")
                        .WithMany("ItemPrices")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Woo.Models.Seller", "SellerObj")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Woo.Models.Receive", b =>
                {
                    b.HasOne("Woo.Models.Item", "ItemObj")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Woo.Models.Seller", "SellerObj")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Woo.Models.ApplicationUser", "UserObj")
                        .WithMany()
                        .HasForeignKey("UserObjId");

                    b.HasOne("Woo.Models.Warehouse", "WarehouseObj")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Woo.Models.ReportTail", b =>
                {
                    b.HasOne("Woo.Models.ReportHead", "reportHead")
                        .WithMany("ReportTails")
                        .HasForeignKey("ReportHeadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Woo.Models.Warehouse", b =>
                {
                    b.HasOne("Woo.Models.Seller", "SellerObj")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
